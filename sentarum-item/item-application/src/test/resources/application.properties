############################################################################################################
#
#			                    Logging settings
#
############################################################################################################
debug=false
#logging.config=classpath:logback-conf.xml
logging.level.io.scleropages=debug
logging.level.org.springframework.orm.jpa.JpaTransactionManager=debug
logging.level.org.springframework.transaction.interceptor=trace
logging.level.org.springframework.web=debug
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace
logging.level.org.hibernate.type.descriptor.sql.BasicExtractor=trace
logging.level.org.apache.shiro=debug
logging.level.org.activiti.engine.impl.persistence.entity=debug
logging.level.org.apache.cxf.services=warn
logging.level.org.springframework.jdbc=trace
logging.level.org.springframework.data.elasticsearch.client.WIRE=trace
logging.level.org.jooq.tools.LoggerListener=trace
############################################################################################################
#
#			                    Actuator settings
#
############################################################################################################
management.endpoints.web.exposure.include=*
management.health.rabbit.enabled=false
javasimon.aspectj-expression=execution(public * io.scleropages..mgmt.*.*(..))
server.tomcat.mbeanregistry.enabled=true
############################################################################################################
#
#			                    Framework settings
#
############################################################################################################
spring.application.name=sentarum-item-application
server.host=localhost
server.port=18080
server.servlet.context-path=/item
server.servlet.jsp.init-parameters.development=true
spring.aop.proxy-target-class=true
spring.jpa.open-in-view=false
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
#never to enabled has larger performance cost
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=false
hibernate.generic_interceptor_enabled=true
mybatis.mapper-locations=classpath*:mappers/*
mybatis.configuration.map-underscore-to-camel-case=true
spring.jdbc.template.query-timeout=-1
spring.jdbc.template.fetch-size=-1
spring.jdbc.template.max-rows=-1
spring.data.rest.base-path=api/hal
spring.data.rest.detection-strategy=default
#security settings
shiro.loginUrl=/login
shiro.successUrl=/home
shiro.web.pre-session-create.enabled=true
#refresh session after logged-in
shiro.authc.session-refresh-enabled=true


#NEVER ENABLE THIS FEATURE.IT WILL CREATED DefaultAdvisorAutoProxyCreator ALREADY DEFINED IN AOP AUTO START.
#SEE ShiroAnnotationProcessorAutoConfiguration
#use shiro.annotations-processing.enabled to instead.
shiro.annotations.enabled=false
shiro.annotations-processing.enabled=true
# jwt(JSON Web Tokens) https://jwt.io/
jwt.signature.http-header-name=Authorization
# use native session registry
## session id cookie
session.native-session-manager.enabled=true
session.native-session-manager.cookie-name=sid
session.native-session-manager.cookie-maxAge=-1
session.native-session-manager.cookie-domain=
session.native-session-manager.cookie-path=
session.native-session-manager.cookie-http-only=true
## enabled only https
session.native-session-manager.cookie-secure=false
#移动客户端或测试工具cookie支持度不好的情况下，可以通过http header或request param获取cookie value
session.native-session-manager.cookie-less.http-header-name=Authentication-Token
session.native-session-manager.cookie-less.request-parameter-name=
## remember cookie
session.remember-me-manager.enabled=true
session.remember-me-manager.cookie-name=rid
session.remember-me-manager.cookie-maxAge=-1
session.remember-me-manager.cookie-domain=
session.remember-me-manager.cookie-path=
session.remember-me-manager.cookie-http-only=true
session.remember-me-manager.cookie-secure=false
session.remember-me-manager.cookie-less.http-header-name=Remember-Me-Token
session.remember-me-manager.cookie-less.request-parameter-name=

# use remote distributed session registry
session.remote-session.enabled=false
session.remote-session.use-local-cache-first=true
session.remote-session.timeout-minutes=120
session.remote-session.touch-flow-control.enabled=true
session.remote-session.touch-flow-control.min-touch-time-ms=60000
session.remote-session.touch-flow-control.max-monitor-size=1000
# use redis as distribute session registry
session.remote-session.redis.key-namespace=${spring.application.name}
session.remote-session.redis.key-type=simple_session
session.remote-session.redis.slot-key=
session.remote-session.redis.serialize=kryo

# captcha verified
security.captcha.enabled=true
#serialize
serialize.provider.kryo.enabled=true
serialize.provider.msgpack.enabled=true
serialize.provider.msgpackv8.enabled=true
serialize.provider.protobuf.enabled=true
serialize.provider.jdk.enabled=true
serialize.provider.jackson.enabled=true
serialize.provider.default=kryo
serialize.provider.base-packege-to-scan=io.scleropages
#cache
spring.cache.jcache.config=classpath:/ehcache/ehcache.xml
# mvc settings
spring.mvc.favicon.enabled=false
spring.thymeleaf.cache=false
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.serialization.indent-output=false
spring.jackson.default-property-inclusion=non_empty
spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.property-naming-strategy=com.fasterxml.jackson.databind.PropertyNamingStrategy.SnakeCaseStrategy
#spring.jackson.property-naming-strategy=com.fasterxml.jackson.databind.PropertyNamingStrategy
############################################################################################################
#
#			                    JDBC settings
#
############################################################################################################
#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#启用通过注解切换数据源，@DataSourceRouting
datasource-routing.annotations.enabled=true
#是否启用多数据源配置
datasource-multiple.enabled=false
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost/sentarum?useUnicode=true&amp;characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=passw0rd
second.datasource.driver-class-name=org.h2.Driver
second.datasource.url=jdbc:h2:file:~/.h2/sentarum-second;AUTO_SERVER=TRUE;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
second.datasource.username=sa
second.datasource.password=
third.datasource.driver-class-name=org.h2.Driver
third.datasource.url=jdbc:h2:file:~/.h2/sentarum-third;AUTO_SERVER=TRUE;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
third.datasource.username=sa
third.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2
#
#hikari datasource settings
#
#controls the default auto-commit behavior of connections returned from the pool
spring.datasource.hikari.auto-commit=false
#controls the maximum lifetime of a connection in the pool.
spring.datasource.hikari.max-lifetime=1800000
#controls the maximum size that the pool is allowed to reach, including both idle and in-use connections.
spring.datasource.hikari.maximum-pool-size=20
#controls the maximum number of milliseconds that a client (that's you) will wait for a connection from the pool.最小30秒
spring.datasource.hikari.connection-timeout=30000
#controls whether the pool will "fail fast" if the pool cannot be seeded with an initial connection successfully.
spring.datasource.hikari.initialization-fail-timeout=1
#controls whether or not JMX Management Beans ("MBeans") are registered or not
spring.datasource.hikari.register-mbeans=false
#controls whether the pool can be suspended and resumed through JMX
spring.datasource.hikari.allow-pool-suspension=false
#controls the amount of time that a connection can be out of the pool before a message is logged indicating a possible connection leak. 0=disabled and <2000
spring.datasource.hikari.leak-detection-threshold=0
#
#druid datasource settings
#
spring.datasource.druid.initial-size=3
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=20
spring.datasource.druid.max-wait=30000
spring.datasource.druid.test-while-idle=false
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
#web console
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.filters=stat
# slow sql
spring.datasource.druid.connectionProperties=druid.stat.mergeSql\=false;druid.stat.slowSqlMillis\=5000
#connection leak check. not enabled in production env
spring.datasource.druid.remove-abandoned=false
spring.datasource.druid.log-abandoned=false
spring.datasource.druid.remove-abandoned-timeout=180



############################################################################################################
#
#			                   Quartz settings
#
############################################################################################################
spring.quartz.jdbc.initialize-schema=never
spring.quartz.job-store-type=jdbc
spring.quartz.overwrite-existing-jobs=false
spring.quartz.startup-delay=120
spring.quartz.wait-for-jobs-to-complete-on-shutdown=true
spring.quartz.scheduler-name=QuartzClusteredScheduler
spring.quartz.auto-startup=false
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval=15000
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.scheduler.skipUpdateCheck=true
############################################################################################################
#
#			                    Mqtt client settings
#
############################################################################################################
mqtt.client.enabled=true
mqtt.client.server-uris=tcp://localhost:1883,tcp://localhost:2883
mqtt.client.user-name=
mqtt.client.password=
mqtt.client.client-id=${spring.application.name}
mqtt.client.auto-startup=false
# whether the client and server should remember state for the client across reconnects.
mqtt.client.clean-session=true
#connect timeout in seconds
mqtt.client.connection-timeout=10
#ping interval in seconds
mqtt.client.keep-alive-interval=30
#flow limit for publisher's settings, max send-pending (without receiving ack.) messages
mqtt.client.max-inflight=50
mqtt.client.automatic-reconnect=true
#initail reconnect delay in MILLISECONDS
mqtt.client.reconnect-delay=5000
#max reconnect delay in MILLISECONDS
mqtt.client.max-reconnect-delay=300000
#消息达到后不会自动ack，需客户端手动确认
mqtt.client.auto-ack=false
mqtt.client.check-connected-on-publishing=true
############################################################################################################
#
#			                    zookeeper client settings
#
############################################################################################################
zookeeper.client.enabled=true
zookeeper.client.connect-string=localhost:2181
zookeeper.client.auto-startup=false
#开启会从spring context查找实现监听的bean并注册
zookeeper.client.auto-register-state-listener=true
#开启会从spring context查找实现监听的bean并注册
zookeeper.client.auto-register-znode-listener=true
#会话超时时间应遵循服务端设置，服务端默认2个tickTime~20个tickTime之间，客户端设置不在这个范围内会以服务端为准
zookeeper.client.session-timeout-ms=60000
#连接超时时间
zookeeper.client.connection-timeout-ms=15000
#重连策略总时间不应超过session-timeout-ms，避免因为超过了会话超时会重置zookeeper对象使当前会话失效
#起始重连等待时间
zookeeper.client.base-sleep-time-ms=50
#重连最大次数，29为最大
zookeeper.client.max-retries=29
#最大重连等待时间
zookeeper.client.max-sleep-ms=2000
#启动进程连接阻塞等待时间
zookeeper.client.block-until-connected-wait-ms=${zookeeper.client.connection-timeout-ms}
#namesapce隔离,所有操作都在该节点下进行
zookeeper.client.namespace=${spring.application.name}
# recipes futures:
# 尝试获取锁最小时间（预估的最小网络交互延迟时间）
zookeeper.client.min-try-acquire-time-ms=200
# 自动启动开启选主
zookeeper.client.auto-leader-selector=true
# 选主路径
zookeeper.client.auto-leader-selector-path=/cluster
# 放弃leader角色后，仍能参与选举
zookeeper.client.auto-leader-selector-requeue=true
# 是否需要 在zookeeper.client.instance-id基础上增加递增序号
zookeeper.client.instance-id.auto_incr=true
# embedded zk server settings
zookeeper.client.embedded-server.enabled=true
zookeeper.client.embedded-server.port=2181
zookeeper.client.embedded-server.auto-start=false
############################################################################################################
#
#			                    amqp client settings
#
############################################################################################################
####################### for connecting #######################
spring.rabbitmq.addresses=localhost:5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/
spring.rabbitmq.connection-timeout=15000
spring.rabbitmq.cache.connection.mode=channel
spring.rabbitmq.cache.channel.size=25
spring.rabbitmq.cache.channel.checkout-timeout=0
spring.rabbitmq.cache.connection.size=1
####################### for producers #######################
# enable message confirm listener for each channels.
spring.rabbitmq.publisher-confirms=true
# if true,mandatory flag will be set to each publish messages.
spring.rabbitmq.template.mandatory=true
# return message (can not route to target destination) listener
spring.rabbitmq.publisher-returns=true
####################### for consumers #######################
# 二选一 https://docs.spring.io/spring-amqp/docs/2.1.7.RELEASE/reference/html/#choose-container
spring.rabbitmq.listener.type=simple
#simple listener container factory
spring.rabbitmq.listener.simple.auto-startup=false
spring.rabbitmq.listener.simple.acknowledge-mode=manual
spring.rabbitmq.listener.simple.concurrency=1
spring.rabbitmq.listener.simple.max-concurrency=1
spring.rabbitmq.listener.simple.prefetch=5
spring.rabbitmq.listener.simple.missing-queues-fatal=true
spring.rabbitmq.listener.simple.default-requeue-rejected=true
#direct listener container factory
spring.rabbitmq.listener.direct.auto-startup=false
spring.rabbitmq.listener.direct.acknowledge-mode=manual
spring.rabbitmq.listener.direct.consumers-per-queue=1
spring.rabbitmq.listener.direct.prefetch=5
spring.rabbitmq.listener.direct.default-requeue-rejected=true
spring.rabbitmq.listener.direct.missing-queues-fatal=true
####################### for rpc #######################
rabbitmq.rpc.async-client.enabled=true
rabbitmq.rpc.async-client.auto-startup=false
# for message serialize
rabbitmq.serialize.jackson-json.enabled=true
rabbitmq.serialize.jackson-xml.enabled=false
rabbitmq.serialize.simple.enabled=true
rabbitmq.serialize.serialize.enabled=true
rabbitmq.serialize.default=serialize
############################################################################################################
#
#			                    Redis settings
#
############################################################################################################
spring.redis.database=0
#connection and command timeout.
spring.redis.timeout=1000
spring.redis.password=
spring.redis.host=localhost
spring.redis.port=6379
# for sentinels
#spring.redis.sentinel.master=mymaster1
#spring.redis.sentinel.nodes=mycentos01:16379,mycentos02:16379,mycentos03:16379
## for cluster
#spring.redis.cluster.timeout=1000
#spring.redis.cluster.max-redirects=3
#spring.redis.cluster.nodes=mycentos01:7379,mycentos01:7380,mycentos01:7381,mycentos02:7379,mycentos02:7380,mycentos02:7381
#master,masterPreferred,slave,slavePreferred,nearest
lettuece.read-from=slavePreferred
management.health.redis.enabled=false
#for blocking or tx operations only
#spring.redis.lettuce.shutdown-timeout=2000
#spring.redis.lettuce.pool.max-idle=5
#spring.redis.lettuce.pool.max-active=10
#spring.redis.lettuce.pool.max-wait=500
#spring.redis.lettuce.pool.min-idle=2
#spring.redis.lettuce.pool.time-between-eviction-runs=
############################################################################################################
#
#			                    Elasticsearch settings
#
############################################################################################################
spring.elasticsearch.rest.uris=http://mycentos01:9200
management.health.elasticsearch.enabled=false
############################################################################################################
#
#			                    Application settings
#
############################################################################################################
openapi.base-packages=io.scleropages.sentarum
openapi.build-on-startup=true
openapi.group=scleropages.io/${spring.application.name}
openapi.title=Api list
openapi.desc=List of available services
openapi.version=v1.0.0
openapi.terms_of_service_url=http://${server.host}:${server.port}/terms_of_service.html
openapi.contact_name=${spring.application.name}
openapi.contact_url=http://${server.host}:${server.port}/contact_url.html
openapi.contact_email=contact_email@somebody.com
openapi.license=${spring.application.name} license
openapi.license_url=http://${server.host}:${server.port}/license_url.html
openapi.gateway=http://${server.host}:${server.port}${server.servlet.context-path}


application.biz-exception.stack-tracing-enabled=true
application.biz-exception.code-prefix=01
application.biz-exception.view-media-type=application/json